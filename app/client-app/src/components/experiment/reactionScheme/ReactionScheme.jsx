import { VStack } from "@chakra-ui/react";
import { Formik, useField } from "formik";
import { KetcherEditor } from "./KetcherEditor";
import { ReactionTable } from "./ReactionTable";
import { useEffect } from "react";
import { TextAreaField } from "components/forms/TextAreaField";

export const ReactionScheme = ({ name }) => {
  const [field, meta, helpers] = useField(name);

  return (
    <Formik
      enableReinitialize
      initialValues={{
        reactionSchemeSketch: field.value?.reactionSchemeSketch || {}, // smiles object generated by sketcher
        reactionDescription: field.value?.reactionDescription || "", // reaction description
        reactionTable: field.value?.reactionTable || [], // table data based on reaction drawing
      }}
    >
      {({ values }) => {
        useEffect(() => {
          // update field value when values changes. reset description and table data if sketcher is empty
          helpers.setValue({
            reactionSchemeSketch: values.reactionSchemeSketch,
            reactionDescription: values.reactionSchemeSketch?.sketcherSmiles
              ? values.reactionDescription
              : "",
            reactionTable: values.reactionSchemeSketch?.sketcherSmiles
              ? values.reactionTable
              : [],
          });
        }, [values]);

        return (
          <VStack minW="full" spacing={5}>
            <KetcherEditor name="reactionSchemeSketch" />

            {values.reactionSchemeSketch?.sketcherSmiles && (
              <VStack minW="full" spacing={5} borderWidth={1} p={2}>
                <TextAreaField
                  name="reactionDescription"
                  title="Reaction Description"
                  placeholder="Enter reaction description"
                  isRequired
                />
                <ReactionTable
                  name="reactionTable"
                  reactionSchemeSketchData={values.reactionSchemeSketch}
                />
              </VStack>
            )}
          </VStack>
        );
      }}
    </Formik>
  );
};
